{"version":3,"sources":["HOC/Authenticate.js","Constants/action-types.js","Components/Add/Add.js","Actions/addExpense.js","Actions/editExpense.js","Components/Report/Report.js","Actions/deleteExpense.js","Components/Edit/Edit.js","Components/Login/Login.js","Actions/authorizeUser.js","Components/App/App.js","Reducers/rootReducer.js","Store/store.js","serviceWorker.js","index.js"],"names":["ComposedComponent","Authenticate","props","console","log","this","checkAndRedirect","isAuthenticated","history","push","Fragment","React","Component","compose","withRouter","connect","state","auth","ADD_EXPENSE","DELETE_EXPENSE","EDIT_EXPENSE","AUTHORIZE_USER","Add","componentDidMount","editItem","itemId","expenseId","item","data","filter","Number","itemIndex","findIndex","setState","expenseName","expenseAmt","expenseDate","showSuccess","showStatusMsg","hideSuccess","setTimeout","submitForm","event","editExpense","addExpense","preventDefault","handleChange","target","className","value","onSubmit","placeholder","onChange","type","mapDispatchToProps","payload","Report","delete","deleteItem","deleteExpense","length","edit","gridItems","map","key","onClick","Edit","match","params","Login","validateCredentials","username","password","authorizeUser","userName","App","path","component","initialState","rootReducer","action","authorizedState","addState","deleteState","updatedData","editState","index","parseInt","store","createStore","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8bafddf.chunk.js","sourcesContent":["import React from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\n\nexport default (ComposedComponent) => {\n    class Authenticate extends React.Component {\n        constructor(props){\n            super(props);\n            console.log(this.props)\n        }\n\n        UNSAFE_componentWillMount() {\n            this.checkAndRedirect();\n        }\n\n        UNSAFE_componentWillUpdate() {\n            this.checkAndRedirect();\n        }\n\n        checkAndRedirect() {\n            const {isAuthenticated} = this.props;\n            console.log(this.props)\n            if(!isAuthenticated) {\n                console.log(\"coming hereee\")\n                this.props.history.push(\"/\")\n            }\n        }\n\n        \n\n        render() {\n            return (\n                <React.Fragment>\n                   \n                    { this.props.isAuthenticated ? <ComposedComponent {...this.props} /> : null }\n                </React.Fragment>\n            )\n        }\n    }\n\n    const mapStateToProps = (state) => {\n        return {\n            isAuthenticated : (state.auth) ? state.auth.isAuthenticated : null\n        }\n    }\n    \n    return compose(withRouter,connect(mapStateToProps,null))(Authenticate);\n}","export const ADD_EXPENSE = \"ADD_EXPENSE\";\nexport const DELETE_EXPENSE = \"DELETE_EXPENSE\";\nexport const EDIT_EXPENSE = \"EDIT_EXPENSE\";\nexport const AUTHORIZE_USER = \"AUTHORIZE_USER\";","import React from \"react\";\nimport \"./Add.scss\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { addExpense } from \"../../Actions/addExpense\";\nimport { editExpense } from \"../../Actions/editExpense\";\n\nclass Add extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.state = {\n      expenseId: \"0\",\n      expenseName: \"\",\n      expenseAmt: \"\",\n      expenseDate: \"\",\n      showStatusMsg: false,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.editItem) {\n      let itemId = this.props.editItem.expenseId;\n      let item = this.props.data.filter(\n        (item) => item.expenseId === Number(itemId)\n      );\n      let itemIndex = this.props.data.findIndex(\n        (item) => item.expenseId === Number(itemId)\n      );\n      console.log(this.props.data, item);\n      this.setState({\n        expenseName: this.props.data[itemIndex].expenseName,\n        expenseAmt: this.props.data[itemIndex].expenseAmt,\n        expenseDate: this.props.data[itemIndex].expenseDate,\n      });\n    }\n  };\n\n  showSuccess = () => {\n    console.log(this.state);\n    this.setState({\n      showStatusMsg: true,\n    });\n    this.hideSuccess();\n  };\n\n  hideSuccess = () => {\n    setTimeout(() => {\n      this.setState({\n        showStatusMsg: false,\n      });\n      this.props.history.push(\"/report\");\n    }, 2500);\n  };\n\n  submitForm = (event) => {\n    const { expenseName, expenseAmt, expenseDate } = this.state;\n    if (this.props.editItem) {\n      this.props.editExpense({\n        expenseId: this.props.editItem.expenseId,\n        expenseName,\n        expenseAmt,\n        expenseDate,\n      });\n      this.props.history.push(\"/report\");\n    } else {\n      this.props.addExpense({ expenseName, expenseAmt, expenseDate });\n      this.showSuccess();\n    }\n\n    event.preventDefault();\n  };\n\n  handleChange = (event) => {\n    switch (event.target.className) {\n      case \"expense-date\":\n        this.setState({\n          expenseDate: event.target.value,\n        });\n        break;\n      case \"expense-name\":\n        this.setState({\n          expenseName: event.target.value,\n        });\n        break;\n      case \"expense-amt\":\n        this.setState({\n          expenseAmt: event.target.value,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"add-expense\">\n          <header className=\"add-header\">\n            {this.props.editItem ? \"Edit Expense\" : \"Add Expenses\"}\n          </header>\n          <form className=\"add-form\" onSubmit={this.submitForm}>\n            <input\n              className=\"expense-name\"\n              placeholder=\"Enter expense name\"\n              value={this.state.expenseName}\n              onChange={this.handleChange}\n              type=\"text\"\n            />\n            <input\n              className=\"expense-amt\"\n              placeholder=\"Enter expense amount\"\n              value={this.state.expenseAmt}\n              onChange={this.handleChange}\n              type=\"text\"\n            />\n            <input\n              className=\"expense-date\"\n              value={this.state.expenseDate}\n              onChange={this.handleChange}\n              type=\"date\"\n            />\n            <input className=\"add-submit\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </section>\n\n        <section\n          className={this.state.showStatusMsg ? \"showStatus\" : \"hideStatus\"}\n        >\n          {this.state.showStatusMsg ? (\n            <span>Your record is successfully submitted.</span>\n          ) : (\n            \"\"\n          )}\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nconst mapDispatchToProps = {\n  addExpense,\n  editExpense,\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Add);\n","import { ADD_EXPENSE } from '../Constants/action-types';\n\nexport function addExpense(payload) {\n    return {type: ADD_EXPENSE, payload};\n}","import { EDIT_EXPENSE } from '../Constants/action-types';\n\nexport function editExpense(payload) {\n    return {type: EDIT_EXPENSE, payload};\n}","import React from \"react\";\nimport \"./Report.scss\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { deleteExpense } from \"../../Actions/deleteExpense\";\n\nclass Report extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n  }\n\n  delete = (deleteItem) => {\n    this.props.deleteExpense(deleteItem);\n    if (this.props.data.length > 1) {\n      this.props.history.push(\"/report\");\n    } else {\n      this.props.history.push(\"/add\");\n    }\n  };\n\n  edit = (editItem) => {\n    this.props.history.push(\"/edit/\" + editItem.expenseId);\n  };\n\n  render() {\n    const gridHeadings = () => {\n      return (\n        <React.Fragment>\n          <div className=\"grid-item grid-headings\">\n            <div>{\"Expense Name\"}</div>\n          </div>\n          <div className=\"grid-item grid-headings\">\n            <div>{\"Expense Amount\"}</div>\n          </div>\n          <div className=\"grid-item grid-headings\">\n            <div>{\"Expense Date\"}</div>\n          </div>\n          <div className=\"grid-item grid-headings\">\n            <div>{\"Actions\"}</div>\n          </div>\n        </React.Fragment>\n      );\n    };\n    const gridItems = this.props.data.map((item) => {\n      console.log(item.expenseId);\n      return (\n        <React.Fragment key={item.expenseName}>\n          <div className=\"grid-item\">\n            <div>{item.expenseName}</div>\n          </div>\n          <div className=\"grid-item\">\n            <div>{item.expenseAmt}</div>\n          </div>\n          <div className=\"grid-item\">\n            <div>{item.expenseDate}</div>\n          </div>\n          <div className=\"grid-item\">\n            <div>\n              <button className=\"editButton\" onClick={() => this.edit(item)}>\n                <i className=\"fa fa-edit\"></i>\n              </button>\n            </div>\n            <div>\n              <button\n                className=\"deleteButton\"\n                onClick={() => this.delete(item)}\n              >\n                <i className=\"fa fa-trash\"></i>\n              </button>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    });\n\n    return (\n      <React.Fragment>\n        <section className=\"report-expense\">\n          <header className=\"report-header\">Expense Report</header>\n          <section className=\"grid-container\">\n            {gridHeadings()}\n            {gridItems}\n          </section>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nconst mapDispatchToProps = {\n  deleteExpense,\n};\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Report);\n","import { DELETE_EXPENSE } from '../Constants/action-types';\n\nexport function deleteExpense(payload) {\n    return {type: DELETE_EXPENSE, payload};\n}","import React from 'react';\nimport './Edit.scss';\nimport Add from '../Add/Add';\n\n\nclass Edit extends React.Component {\n\n  render() {\n    return (\n      <section className=\"\"> \n        <Add editItem={this.props.match.params}></Add>\n      </section>\n    )\n  }\n\n}\nexport default Edit;\n","import React from \"react\";\nimport \"./Login.scss\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { authorizeUser } from \"../../Actions/authorizeUser\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  // componentDidUpdate = (prevProps) => {\n  //   console.log(prevPros)\n  // }\n\n  validateCredentials = (event) => {\n    if (\n      this.state.username === \"test123\" &&\n      this.state.password === \"test123\"\n    ) {\n      console.log(\"login\", this.state);\n      // this.setState({\n      //   isAuthenticated: true\n      // }\n\n      // ,()=>{\n      //   console.log('login',this.state);\n      //   this.props.history.push('/add');\n      //   //event.preventDefault();\n      // });\n      this.props.authorizeUser(true);\n      this.props.history.push(\"/add\");\n      event.preventDefault();\n    }\n  };\n\n  handleChange = (event) => {\n    switch (event.target.className) {\n      case \"user-name\":\n        this.setState({\n          username: event.target.value,\n        });\n        break;\n      case \"password\":\n        this.setState({\n          password: event.target.value,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"login\">\n          <header className=\"login-header\">Login</header>\n          <form className=\"login-form\" onSubmit={this.validateCredentials}>\n            <input\n              className=\"user-name\"\n              placeholder=\"Enter user name\"\n              value={this.state.userName}\n              onChange={this.handleChange}\n              type=\"text\"\n            />\n            <input\n              className=\"password\"\n              placeholder=\"Enter password\"\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n            <input className=\"login-submit\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  authorizeUser,\n};\n\nexport default compose(withRouter, connect(null, mapDispatchToProps))(Login);\n","import { AUTHORIZE_USER } from '../Constants/action-types';\n\nexport function authorizeUser(payload) {\n    return {type: AUTHORIZE_USER, payload};\n}","import React from \"react\";\nimport \"./App.scss\";\nimport Authenticate from \"./../../HOC/Authenticate\";\n\nimport Add from \"./../Add/Add\";\nimport Report from \"../Report/Report\";\nimport Edit from \"../Edit/Edit\";\n\nimport Login from \"../Login/Login\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <main className=\"content\">\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/add\" component={Authenticate(Add)} />\n              <Route path=\"/report\" component={Authenticate(Report)} />\n              <Route path=\"/edit/:expenseId\" component={Authenticate(Edit)} />\n              <Route path=\"/\" component={Login} />\n            </Switch>\n          </BrowserRouter>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ADD_EXPENSE, DELETE_EXPENSE, EDIT_EXPENSE, AUTHORIZE_USER } from '../Constants/action-types'\n\nconst initialState = {\n    data:\n    [\n        {\n            expenseId: 0,\n            expenseName: 'Groceries',\n            expenseAmt: '500',\n            expenseDate: '2019-12-12',\n        }\n    ],\n    auth: { isAuthenticated: false}\n}\n\nfunction rootReducer(state = initialState, action) {\n    switch(action.type) {\n        case AUTHORIZE_USER:\n            const authorizedState = {...state};\n            authorizedState['auth'] = {};\n            authorizedState['auth']['isAuthenticated']= action.payload;\n            return authorizedState;\n        case ADD_EXPENSE :          \n            const addState = {...state};\n            addState.data[addState.data.length] = {   \n                expenseId: addState.data.length,\n                expenseName: action.payload.expenseName,\n                expenseAmt: action.payload.expenseAmt,\n                expenseDate: action.payload.expenseDate\n            };\n            return addState;\n        case DELETE_EXPENSE :\n            const deleteState = {...state};\n            deleteState.data = deleteState.data.filter(item => item.expenseId !== action.payload.expenseId);\n            return deleteState;\n        case EDIT_EXPENSE :\n            const updatedData = action.payload;\n            const editState = {...state};\n            const index = parseInt(action.payload.expenseId);\n            editState.data[index] = updatedData;\n            return editState;\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;","import {createStore} from \"redux\";\nimport rootReducer from \"./../Reducers/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './Store/store';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}